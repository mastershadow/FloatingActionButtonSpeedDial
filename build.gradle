/*
 * Copyright 2020 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'org.jetbrains.dokka'
apply from: rootProject.file('versions-plugin.gradle')
apply from: rootProject.file('detekt.gradle')
apply from: rootProject.file('publish-root.gradle')

buildscript {
    repositories {
        apply from: 'dependencies.gradle'
        addRepos(repositories)
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "com.android.tools.build:gradle:$versions.android_gradle_plugin"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$versions.dokka"
        classpath "io.github.gradle-nexus:publish-plugin:$versions.publish_plugin"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions.gradle_versions_plugin"
        classpath "se.bjurr.violations:violation-comments-to-github-gradle-plugin:$versions.violations_plugin"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:$versions.errorprone_plugin"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }
    repositories {
        addRepos(repositories)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task violationCommentsToGitHub(type: se.bjurr.violations.comments.github.plugin.gradle.ViolationCommentsToGitHubTask) {
    repositoryOwner = "leinardi"
    repositoryName = "FloatingActionButtonSpeedDial"
    pullRequestId = System.properties['GITHUB_PULLREQUESTID']
    oAuth2Token = System.properties['GITHUB_OAUTH2TOKEN']
    gitHubUrl = "https://api.github.com/"
    createCommentWithAllSingleFileComments = false
    createSingleFileComments = true
    commentOnlyChangedContent = true
    violations = [
            ["FINDBUGS", ".", ".*/reports/findbugs/.*\\.xml\$", "Findbugs"],
            ["CHECKSTYLE", ".", ".*/reports/checkstyle/.*debug\\.xml\$", "Checkstyle"],
            ["ANDROIDLINT", ".", ".*/reports/lint-results.*\\.xml\$", "Android Lint"],
            ["GOOGLEERRORPRONE", ".", ".*/build.log\$", "Error Prone"]
    ]
}
